# Everything at the top level here is happening at the scope of http in nginx.conf.

# remote address is a joke here since we don't have x-forwarded-for
limit_req_zone $binary_remote_addr zone=one:10m rate=500r/s;

map $http_x_forwarded_proto $web_proxy_scheme {
  default $scheme;
  https https;
}

upstream twlight {
  server twlight:80;
}

server {
  # if no Host match, close the connection to prevent host spoofing
  listen 80 default_server;
  return 444;
}

server {
    listen 80 deferred;
    client_max_body_size 4G;
    server_name wikipedialibrary.wmflabs.org;
    keepalive_timeout 5;

    root /app;

    location / {
      # Redirects any http requests to https.
      if ($web_proxy_scheme = 'http') {
          return 301 https://$host$request_uri;
      }
      # checks for static file, if not found proxy to app
      try_files $uri @twlight;
    }

    location @twlight {
      limit_req zone=one burst=1000 nodelay;
      proxy_set_header X-Forwarded-Proto $web_proxy_scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://twlight;
    }

    proxy_intercept_errors on;
    error_page 500 502 503 504 /500.html;

    location /500-dog.jpeg {
        root /app/500/;
    }

    location /500-Wikipedia_Library_owl.svg {
        root /app/500/;
    }

    location ~ .+/((500-Wikipedia_Library_owl\.svg)|(500-dog\.jpeg))$ {
        try_files $uri /$1;
    }

    location /500.html {
        internal;
        root /app/500/;
    }

}
